name: Test Library Database Queries

on:
  push:
    branches: [ main, master, dev ]
  pull_request:

jobs:
  test-sql:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - ${{ vars.POSTGRES_PORT }}:5432
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DB }}"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=5
        volumes:
          - ./init:/docker-entrypoint-initdb.d

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install pytest psycopg2-binary

      - name: Wait for PostgreSQL
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_PORT: ${{ vars.POSTGRES_PORT }}
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -U "$POSTGRES_USER" -d "$POSTGRES_DB" -p "$POSTGRES_PORT" && break
            echo "‚è≥ Waiting for DB..."
            sleep 3
          done

      - name: Run pytest
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_PORT: ${{ vars.POSTGRES_PORT }}
        run: pytest -v test/
